version: '3'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend_network
    volumes:
      - redis_data:/data

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
    ports:
      - "3306:3306"
    networks:
      - backend_network
    volumes:
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - backend_network

  api:
    # 因為dockerfile在目錄，所以用.
      build: .
      container_name: site-api
      depends_on:
        - mysql
        - redis
      env_file:
        - .env
      ports:
        - "8080:8080"
      networks:
        - backend_network
        
      command: sh -c "while ! nc -z ${MYSQL_HOST} 3306; do sleep 1; done && ./main"


volumes:
  mysql_data:
  redis_data:
  

networks:
  backend_network:
    driver: bridge
